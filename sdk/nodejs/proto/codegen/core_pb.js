// source: pulumi/codegen/core.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.pulumirpc.codegen.Core', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.Enumeration', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.EnumerationValue', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.Interface', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.Method', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.Parameter', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.PrimitiveType', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.Property', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.Record', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.SDK', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.TypeDeclaration', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.TypeDeclaration.ElementCase', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.TypeReference', null, global);
goog.exportSymbol('proto.pulumirpc.codegen.TypeReference.ElementCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.Core = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulumirpc.codegen.Core, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.Core.displayName = 'proto.pulumirpc.codegen.Core';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.TypeReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pulumirpc.codegen.TypeReference.oneofGroups_);
};
goog.inherits(proto.pulumirpc.codegen.TypeReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.TypeReference.displayName = 'proto.pulumirpc.codegen.TypeReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.EnumerationValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulumirpc.codegen.EnumerationValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.EnumerationValue.displayName = 'proto.pulumirpc.codegen.EnumerationValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.Enumeration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulumirpc.codegen.Enumeration.repeatedFields_, null);
};
goog.inherits(proto.pulumirpc.codegen.Enumeration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.Enumeration.displayName = 'proto.pulumirpc.codegen.Enumeration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.TypeDeclaration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pulumirpc.codegen.TypeDeclaration.oneofGroups_);
};
goog.inherits(proto.pulumirpc.codegen.TypeDeclaration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.TypeDeclaration.displayName = 'proto.pulumirpc.codegen.TypeDeclaration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.Property = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulumirpc.codegen.Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.Property.displayName = 'proto.pulumirpc.codegen.Property';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.Record = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulumirpc.codegen.Record.repeatedFields_, null);
};
goog.inherits(proto.pulumirpc.codegen.Record, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.Record.displayName = 'proto.pulumirpc.codegen.Record';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.Parameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulumirpc.codegen.Parameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.Parameter.displayName = 'proto.pulumirpc.codegen.Parameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.Method = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulumirpc.codegen.Method.repeatedFields_, null);
};
goog.inherits(proto.pulumirpc.codegen.Method, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.Method.displayName = 'proto.pulumirpc.codegen.Method';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.Interface = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulumirpc.codegen.Interface.repeatedFields_, null);
};
goog.inherits(proto.pulumirpc.codegen.Interface, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.Interface.displayName = 'proto.pulumirpc.codegen.Interface';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulumirpc.codegen.SDK = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulumirpc.codegen.SDK.repeatedFields_, null);
};
goog.inherits(proto.pulumirpc.codegen.SDK, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulumirpc.codegen.SDK.displayName = 'proto.pulumirpc.codegen.SDK';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.Core.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.Core.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.Core} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Core.toObject = function(includeInstance, msg) {
  var f, obj = {
    sdk: (f = msg.getSdk()) && proto.pulumirpc.codegen.SDK.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.Core}
 */
proto.pulumirpc.codegen.Core.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.Core;
  return proto.pulumirpc.codegen.Core.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.Core} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.Core}
 */
proto.pulumirpc.codegen.Core.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulumirpc.codegen.SDK;
      reader.readMessage(value,proto.pulumirpc.codegen.SDK.deserializeBinaryFromReader);
      msg.setSdk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.Core.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.Core.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.Core} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Core.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSdk();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pulumirpc.codegen.SDK.serializeBinaryToWriter
    );
  }
};


/**
 * optional SDK sdk = 1;
 * @return {?proto.pulumirpc.codegen.SDK}
 */
proto.pulumirpc.codegen.Core.prototype.getSdk = function() {
  return /** @type{?proto.pulumirpc.codegen.SDK} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.SDK, 1));
};


/**
 * @param {?proto.pulumirpc.codegen.SDK|undefined} value
 * @return {!proto.pulumirpc.codegen.Core} returns this
*/
proto.pulumirpc.codegen.Core.prototype.setSdk = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.Core} returns this
 */
proto.pulumirpc.codegen.Core.prototype.clearSdk = function() {
  return this.setSdk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.Core.prototype.hasSdk = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pulumirpc.codegen.TypeReference.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.pulumirpc.codegen.TypeReference.ElementCase = {
  ELEMENT_NOT_SET: 0,
  PRIMITIVE: 1,
  ARRAY: 2,
  MAP: 3,
  REF: 4
};

/**
 * @return {proto.pulumirpc.codegen.TypeReference.ElementCase}
 */
proto.pulumirpc.codegen.TypeReference.prototype.getElementCase = function() {
  return /** @type {proto.pulumirpc.codegen.TypeReference.ElementCase} */(jspb.Message.computeOneofCase(this, proto.pulumirpc.codegen.TypeReference.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.TypeReference.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.TypeReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.TypeReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.TypeReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    primitive: jspb.Message.getFieldWithDefault(msg, 1, 0),
    array: (f = msg.getArray()) && proto.pulumirpc.codegen.TypeReference.toObject(includeInstance, f),
    map: (f = msg.getMap()) && proto.pulumirpc.codegen.TypeReference.toObject(includeInstance, f),
    ref: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.TypeReference}
 */
proto.pulumirpc.codegen.TypeReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.TypeReference;
  return proto.pulumirpc.codegen.TypeReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.TypeReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.TypeReference}
 */
proto.pulumirpc.codegen.TypeReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pulumirpc.codegen.PrimitiveType} */ (reader.readEnum());
      msg.setPrimitive(value);
      break;
    case 2:
      var value = new proto.pulumirpc.codegen.TypeReference;
      reader.readMessage(value,proto.pulumirpc.codegen.TypeReference.deserializeBinaryFromReader);
      msg.setArray(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.TypeReference;
      reader.readMessage(value,proto.pulumirpc.codegen.TypeReference.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.TypeReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.TypeReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.TypeReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.TypeReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.pulumirpc.codegen.PrimitiveType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getArray();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pulumirpc.codegen.TypeReference.serializeBinaryToWriter
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pulumirpc.codegen.TypeReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional PrimitiveType primitive = 1;
 * @return {!proto.pulumirpc.codegen.PrimitiveType}
 */
proto.pulumirpc.codegen.TypeReference.prototype.getPrimitive = function() {
  return /** @type {!proto.pulumirpc.codegen.PrimitiveType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pulumirpc.codegen.PrimitiveType} value
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
 */
proto.pulumirpc.codegen.TypeReference.prototype.setPrimitive = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pulumirpc.codegen.TypeReference.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
 */
proto.pulumirpc.codegen.TypeReference.prototype.clearPrimitive = function() {
  return jspb.Message.setOneofField(this, 1, proto.pulumirpc.codegen.TypeReference.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.TypeReference.prototype.hasPrimitive = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TypeReference array = 2;
 * @return {?proto.pulumirpc.codegen.TypeReference}
 */
proto.pulumirpc.codegen.TypeReference.prototype.getArray = function() {
  return /** @type{?proto.pulumirpc.codegen.TypeReference} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.TypeReference, 2));
};


/**
 * @param {?proto.pulumirpc.codegen.TypeReference|undefined} value
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
*/
proto.pulumirpc.codegen.TypeReference.prototype.setArray = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pulumirpc.codegen.TypeReference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
 */
proto.pulumirpc.codegen.TypeReference.prototype.clearArray = function() {
  return this.setArray(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.TypeReference.prototype.hasArray = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TypeReference map = 3;
 * @return {?proto.pulumirpc.codegen.TypeReference}
 */
proto.pulumirpc.codegen.TypeReference.prototype.getMap = function() {
  return /** @type{?proto.pulumirpc.codegen.TypeReference} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.TypeReference, 3));
};


/**
 * @param {?proto.pulumirpc.codegen.TypeReference|undefined} value
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
*/
proto.pulumirpc.codegen.TypeReference.prototype.setMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pulumirpc.codegen.TypeReference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
 */
proto.pulumirpc.codegen.TypeReference.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.TypeReference.prototype.hasMap = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string ref = 4;
 * @return {string}
 */
proto.pulumirpc.codegen.TypeReference.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
 */
proto.pulumirpc.codegen.TypeReference.prototype.setRef = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.pulumirpc.codegen.TypeReference.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulumirpc.codegen.TypeReference} returns this
 */
proto.pulumirpc.codegen.TypeReference.prototype.clearRef = function() {
  return jspb.Message.setOneofField(this, 4, proto.pulumirpc.codegen.TypeReference.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.TypeReference.prototype.hasRef = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.EnumerationValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.EnumerationValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.EnumerationValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.EnumerationValue}
 */
proto.pulumirpc.codegen.EnumerationValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.EnumerationValue;
  return proto.pulumirpc.codegen.EnumerationValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.EnumerationValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.EnumerationValue}
 */
proto.pulumirpc.codegen.EnumerationValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.EnumerationValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.EnumerationValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.EnumerationValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.EnumerationValue} returns this
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.EnumerationValue} returns this
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 value = 3;
 * @return {number}
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulumirpc.codegen.EnumerationValue} returns this
 */
proto.pulumirpc.codegen.EnumerationValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulumirpc.codegen.Enumeration.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.Enumeration.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.Enumeration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.Enumeration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Enumeration.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.pulumirpc.codegen.EnumerationValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.Enumeration}
 */
proto.pulumirpc.codegen.Enumeration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.Enumeration;
  return proto.pulumirpc.codegen.Enumeration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.Enumeration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.Enumeration}
 */
proto.pulumirpc.codegen.Enumeration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.EnumerationValue;
      reader.readMessage(value,proto.pulumirpc.codegen.EnumerationValue.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.Enumeration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.Enumeration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.Enumeration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Enumeration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pulumirpc.codegen.EnumerationValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pulumirpc.codegen.Enumeration.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Enumeration} returns this
 */
proto.pulumirpc.codegen.Enumeration.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.pulumirpc.codegen.Enumeration.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Enumeration} returns this
 */
proto.pulumirpc.codegen.Enumeration.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated EnumerationValue values = 3;
 * @return {!Array<!proto.pulumirpc.codegen.EnumerationValue>}
 */
proto.pulumirpc.codegen.Enumeration.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.pulumirpc.codegen.EnumerationValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulumirpc.codegen.EnumerationValue, 3));
};


/**
 * @param {!Array<!proto.pulumirpc.codegen.EnumerationValue>} value
 * @return {!proto.pulumirpc.codegen.Enumeration} returns this
*/
proto.pulumirpc.codegen.Enumeration.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pulumirpc.codegen.EnumerationValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulumirpc.codegen.EnumerationValue}
 */
proto.pulumirpc.codegen.Enumeration.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pulumirpc.codegen.EnumerationValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulumirpc.codegen.Enumeration} returns this
 */
proto.pulumirpc.codegen.Enumeration.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pulumirpc.codegen.TypeDeclaration.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.pulumirpc.codegen.TypeDeclaration.ElementCase = {
  ELEMENT_NOT_SET: 0,
  RECORD: 1,
  INTERFACE: 2,
  ENUMERATION: 3
};

/**
 * @return {proto.pulumirpc.codegen.TypeDeclaration.ElementCase}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.getElementCase = function() {
  return /** @type {proto.pulumirpc.codegen.TypeDeclaration.ElementCase} */(jspb.Message.computeOneofCase(this, proto.pulumirpc.codegen.TypeDeclaration.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.TypeDeclaration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.TypeDeclaration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.TypeDeclaration.toObject = function(includeInstance, msg) {
  var f, obj = {
    record: (f = msg.getRecord()) && proto.pulumirpc.codegen.Record.toObject(includeInstance, f),
    pb_interface: (f = msg.getInterface()) && proto.pulumirpc.codegen.Interface.toObject(includeInstance, f),
    enumeration: (f = msg.getEnumeration()) && proto.pulumirpc.codegen.Enumeration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.TypeDeclaration}
 */
proto.pulumirpc.codegen.TypeDeclaration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.TypeDeclaration;
  return proto.pulumirpc.codegen.TypeDeclaration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.TypeDeclaration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.TypeDeclaration}
 */
proto.pulumirpc.codegen.TypeDeclaration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulumirpc.codegen.Record;
      reader.readMessage(value,proto.pulumirpc.codegen.Record.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    case 2:
      var value = new proto.pulumirpc.codegen.Interface;
      reader.readMessage(value,proto.pulumirpc.codegen.Interface.deserializeBinaryFromReader);
      msg.setInterface(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.Enumeration;
      reader.readMessage(value,proto.pulumirpc.codegen.Enumeration.deserializeBinaryFromReader);
      msg.setEnumeration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.TypeDeclaration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.TypeDeclaration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.TypeDeclaration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pulumirpc.codegen.Record.serializeBinaryToWriter
    );
  }
  f = message.getInterface();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pulumirpc.codegen.Interface.serializeBinaryToWriter
    );
  }
  f = message.getEnumeration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pulumirpc.codegen.Enumeration.serializeBinaryToWriter
    );
  }
};


/**
 * optional Record record = 1;
 * @return {?proto.pulumirpc.codegen.Record}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.getRecord = function() {
  return /** @type{?proto.pulumirpc.codegen.Record} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.Record, 1));
};


/**
 * @param {?proto.pulumirpc.codegen.Record|undefined} value
 * @return {!proto.pulumirpc.codegen.TypeDeclaration} returns this
*/
proto.pulumirpc.codegen.TypeDeclaration.prototype.setRecord = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.pulumirpc.codegen.TypeDeclaration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.TypeDeclaration} returns this
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Interface interface = 2;
 * @return {?proto.pulumirpc.codegen.Interface}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.getInterface = function() {
  return /** @type{?proto.pulumirpc.codegen.Interface} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.Interface, 2));
};


/**
 * @param {?proto.pulumirpc.codegen.Interface|undefined} value
 * @return {!proto.pulumirpc.codegen.TypeDeclaration} returns this
*/
proto.pulumirpc.codegen.TypeDeclaration.prototype.setInterface = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pulumirpc.codegen.TypeDeclaration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.TypeDeclaration} returns this
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.clearInterface = function() {
  return this.setInterface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.hasInterface = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Enumeration enumeration = 3;
 * @return {?proto.pulumirpc.codegen.Enumeration}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.getEnumeration = function() {
  return /** @type{?proto.pulumirpc.codegen.Enumeration} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.Enumeration, 3));
};


/**
 * @param {?proto.pulumirpc.codegen.Enumeration|undefined} value
 * @return {!proto.pulumirpc.codegen.TypeDeclaration} returns this
*/
proto.pulumirpc.codegen.TypeDeclaration.prototype.setEnumeration = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pulumirpc.codegen.TypeDeclaration.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.TypeDeclaration} returns this
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.clearEnumeration = function() {
  return this.setEnumeration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.TypeDeclaration.prototype.hasEnumeration = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.Property.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.Property.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.Property} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Property.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: (f = msg.getType()) && proto.pulumirpc.codegen.TypeReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.Property}
 */
proto.pulumirpc.codegen.Property.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.Property;
  return proto.pulumirpc.codegen.Property.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.Property}
 */
proto.pulumirpc.codegen.Property.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.TypeReference;
      reader.readMessage(value,proto.pulumirpc.codegen.TypeReference.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.Property.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Property.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pulumirpc.codegen.TypeReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pulumirpc.codegen.Property.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Property} returns this
 */
proto.pulumirpc.codegen.Property.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.pulumirpc.codegen.Property.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Property} returns this
 */
proto.pulumirpc.codegen.Property.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TypeReference type = 3;
 * @return {?proto.pulumirpc.codegen.TypeReference}
 */
proto.pulumirpc.codegen.Property.prototype.getType = function() {
  return /** @type{?proto.pulumirpc.codegen.TypeReference} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.TypeReference, 3));
};


/**
 * @param {?proto.pulumirpc.codegen.TypeReference|undefined} value
 * @return {!proto.pulumirpc.codegen.Property} returns this
*/
proto.pulumirpc.codegen.Property.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.Property} returns this
 */
proto.pulumirpc.codegen.Property.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.Property.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulumirpc.codegen.Record.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.Record.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.Record.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.Record} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Record.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    proto.pulumirpc.codegen.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.Record}
 */
proto.pulumirpc.codegen.Record.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.Record;
  return proto.pulumirpc.codegen.Record.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.Record} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.Record}
 */
proto.pulumirpc.codegen.Record.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.Property;
      reader.readMessage(value,proto.pulumirpc.codegen.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.Record.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.Record.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.Record} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Record.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pulumirpc.codegen.Property.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pulumirpc.codegen.Record.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Record} returns this
 */
proto.pulumirpc.codegen.Record.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.pulumirpc.codegen.Record.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Record} returns this
 */
proto.pulumirpc.codegen.Record.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Property properties = 3;
 * @return {!Array<!proto.pulumirpc.codegen.Property>}
 */
proto.pulumirpc.codegen.Record.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.pulumirpc.codegen.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulumirpc.codegen.Property, 3));
};


/**
 * @param {!Array<!proto.pulumirpc.codegen.Property>} value
 * @return {!proto.pulumirpc.codegen.Record} returns this
*/
proto.pulumirpc.codegen.Record.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pulumirpc.codegen.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulumirpc.codegen.Property}
 */
proto.pulumirpc.codegen.Record.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pulumirpc.codegen.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulumirpc.codegen.Record} returns this
 */
proto.pulumirpc.codegen.Record.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.Parameter.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.Parameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.Parameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Parameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: (f = msg.getType()) && proto.pulumirpc.codegen.TypeReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.Parameter}
 */
proto.pulumirpc.codegen.Parameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.Parameter;
  return proto.pulumirpc.codegen.Parameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.Parameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.Parameter}
 */
proto.pulumirpc.codegen.Parameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.TypeReference;
      reader.readMessage(value,proto.pulumirpc.codegen.TypeReference.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.Parameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.Parameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.Parameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Parameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pulumirpc.codegen.TypeReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pulumirpc.codegen.Parameter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Parameter} returns this
 */
proto.pulumirpc.codegen.Parameter.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.pulumirpc.codegen.Parameter.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Parameter} returns this
 */
proto.pulumirpc.codegen.Parameter.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TypeReference type = 3;
 * @return {?proto.pulumirpc.codegen.TypeReference}
 */
proto.pulumirpc.codegen.Parameter.prototype.getType = function() {
  return /** @type{?proto.pulumirpc.codegen.TypeReference} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.TypeReference, 3));
};


/**
 * @param {?proto.pulumirpc.codegen.TypeReference|undefined} value
 * @return {!proto.pulumirpc.codegen.Parameter} returns this
*/
proto.pulumirpc.codegen.Parameter.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.Parameter} returns this
 */
proto.pulumirpc.codegen.Parameter.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.Parameter.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulumirpc.codegen.Method.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.Method.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.Method.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.Method} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Method.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    returnType: (f = msg.getReturnType()) && proto.pulumirpc.codegen.TypeReference.toObject(includeInstance, f),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.pulumirpc.codegen.Parameter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.Method}
 */
proto.pulumirpc.codegen.Method.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.Method;
  return proto.pulumirpc.codegen.Method.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.Method} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.Method}
 */
proto.pulumirpc.codegen.Method.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.TypeReference;
      reader.readMessage(value,proto.pulumirpc.codegen.TypeReference.deserializeBinaryFromReader);
      msg.setReturnType(value);
      break;
    case 4:
      var value = new proto.pulumirpc.codegen.Parameter;
      reader.readMessage(value,proto.pulumirpc.codegen.Parameter.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.Method.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.Method.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.Method} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Method.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReturnType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pulumirpc.codegen.TypeReference.serializeBinaryToWriter
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.pulumirpc.codegen.Parameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pulumirpc.codegen.Method.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Method} returns this
 */
proto.pulumirpc.codegen.Method.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.pulumirpc.codegen.Method.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Method} returns this
 */
proto.pulumirpc.codegen.Method.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TypeReference return_type = 3;
 * @return {?proto.pulumirpc.codegen.TypeReference}
 */
proto.pulumirpc.codegen.Method.prototype.getReturnType = function() {
  return /** @type{?proto.pulumirpc.codegen.TypeReference} */ (
    jspb.Message.getWrapperField(this, proto.pulumirpc.codegen.TypeReference, 3));
};


/**
 * @param {?proto.pulumirpc.codegen.TypeReference|undefined} value
 * @return {!proto.pulumirpc.codegen.Method} returns this
*/
proto.pulumirpc.codegen.Method.prototype.setReturnType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulumirpc.codegen.Method} returns this
 */
proto.pulumirpc.codegen.Method.prototype.clearReturnType = function() {
  return this.setReturnType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulumirpc.codegen.Method.prototype.hasReturnType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Parameter parameters = 4;
 * @return {!Array<!proto.pulumirpc.codegen.Parameter>}
 */
proto.pulumirpc.codegen.Method.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.pulumirpc.codegen.Parameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulumirpc.codegen.Parameter, 4));
};


/**
 * @param {!Array<!proto.pulumirpc.codegen.Parameter>} value
 * @return {!proto.pulumirpc.codegen.Method} returns this
*/
proto.pulumirpc.codegen.Method.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.pulumirpc.codegen.Parameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulumirpc.codegen.Parameter}
 */
proto.pulumirpc.codegen.Method.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.pulumirpc.codegen.Parameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulumirpc.codegen.Method} returns this
 */
proto.pulumirpc.codegen.Method.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulumirpc.codegen.Interface.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.Interface.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.Interface.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.Interface} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Interface.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    methodsList: jspb.Message.toObjectList(msg.getMethodsList(),
    proto.pulumirpc.codegen.Method.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.Interface}
 */
proto.pulumirpc.codegen.Interface.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.Interface;
  return proto.pulumirpc.codegen.Interface.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.Interface} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.Interface}
 */
proto.pulumirpc.codegen.Interface.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.pulumirpc.codegen.Method;
      reader.readMessage(value,proto.pulumirpc.codegen.Method.deserializeBinaryFromReader);
      msg.addMethods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.Interface.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.Interface.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.Interface} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.Interface.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pulumirpc.codegen.Method.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pulumirpc.codegen.Interface.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Interface} returns this
 */
proto.pulumirpc.codegen.Interface.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.pulumirpc.codegen.Interface.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulumirpc.codegen.Interface} returns this
 */
proto.pulumirpc.codegen.Interface.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Method methods = 3;
 * @return {!Array<!proto.pulumirpc.codegen.Method>}
 */
proto.pulumirpc.codegen.Interface.prototype.getMethodsList = function() {
  return /** @type{!Array<!proto.pulumirpc.codegen.Method>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulumirpc.codegen.Method, 3));
};


/**
 * @param {!Array<!proto.pulumirpc.codegen.Method>} value
 * @return {!proto.pulumirpc.codegen.Interface} returns this
*/
proto.pulumirpc.codegen.Interface.prototype.setMethodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pulumirpc.codegen.Method=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulumirpc.codegen.Method}
 */
proto.pulumirpc.codegen.Interface.prototype.addMethods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pulumirpc.codegen.Method, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulumirpc.codegen.Interface} returns this
 */
proto.pulumirpc.codegen.Interface.prototype.clearMethodsList = function() {
  return this.setMethodsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulumirpc.codegen.SDK.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulumirpc.codegen.SDK.prototype.toObject = function(opt_includeInstance) {
  return proto.pulumirpc.codegen.SDK.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulumirpc.codegen.SDK} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.SDK.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeDeclarationsList: jspb.Message.toObjectList(msg.getTypeDeclarationsList(),
    proto.pulumirpc.codegen.TypeDeclaration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulumirpc.codegen.SDK}
 */
proto.pulumirpc.codegen.SDK.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulumirpc.codegen.SDK;
  return proto.pulumirpc.codegen.SDK.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulumirpc.codegen.SDK} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulumirpc.codegen.SDK}
 */
proto.pulumirpc.codegen.SDK.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulumirpc.codegen.TypeDeclaration;
      reader.readMessage(value,proto.pulumirpc.codegen.TypeDeclaration.deserializeBinaryFromReader);
      msg.addTypeDeclarations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulumirpc.codegen.SDK.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulumirpc.codegen.SDK.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulumirpc.codegen.SDK} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulumirpc.codegen.SDK.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeDeclarationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pulumirpc.codegen.TypeDeclaration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TypeDeclaration type_declarations = 1;
 * @return {!Array<!proto.pulumirpc.codegen.TypeDeclaration>}
 */
proto.pulumirpc.codegen.SDK.prototype.getTypeDeclarationsList = function() {
  return /** @type{!Array<!proto.pulumirpc.codegen.TypeDeclaration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulumirpc.codegen.TypeDeclaration, 1));
};


/**
 * @param {!Array<!proto.pulumirpc.codegen.TypeDeclaration>} value
 * @return {!proto.pulumirpc.codegen.SDK} returns this
*/
proto.pulumirpc.codegen.SDK.prototype.setTypeDeclarationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pulumirpc.codegen.TypeDeclaration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulumirpc.codegen.TypeDeclaration}
 */
proto.pulumirpc.codegen.SDK.prototype.addTypeDeclarations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pulumirpc.codegen.TypeDeclaration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulumirpc.codegen.SDK} returns this
 */
proto.pulumirpc.codegen.SDK.prototype.clearTypeDeclarationsList = function() {
  return this.setTypeDeclarationsList([]);
};


/**
 * @enum {number}
 */
proto.pulumirpc.codegen.PrimitiveType = {
  TYPE_UNIT: 0,
  TYPE_BOOL: 1,
  TYPE_BYTE: 2,
  TYPE_INT: 3,
  TYPE_STRING: 4,
  TYPE_PROPERTY_VALUE: 5,
  TYPE_DURATION: 6
};

goog.object.extend(exports, proto.pulumirpc.codegen);
